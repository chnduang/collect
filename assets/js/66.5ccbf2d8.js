(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{358:function(a,s,t){"use strict";t.r(s);var n=t(4),e=Object(n.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"windows中python虚拟环境virtualenv使用命令行workon的操作错误"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#windows中python虚拟环境virtualenv使用命令行workon的操作错误"}},[a._v("#")]),a._v(" windows中python虚拟环境virtualenv使用命令行workon的操作错误")]),a._v(" "),s("ul",[s("li",[a._v("使用命令pip install virtualenvwrapper安装后，使用workon命令不起作用提示")]),a._v(" "),s("li",[a._v("workon不是内部或外部命令,也不是可执行的程序")]),a._v(" "),s("li",[a._v("只需要在后面加上-win既可，再用workon就可以了")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v(" pip "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" virtualenvwrapper-win \n")])])]),s("ul",[s("li",[s("p",[a._v("自定义安装的虚拟环境路径")]),a._v(" "),s("ul",[s("li",[a._v("新建系统环境变量：")]),a._v(" "),s("li",[a._v("WORKON_HOME 路径可已定义，")]),a._v(" "),s("li",[a._v("之后创建的虚拟环境都会在自定义的文件夹下，")]),a._v(" "),s("li",[a._v("可以将之前创建过得虚拟环境复制过来")])])]),a._v(" "),s("li",[s("p",[a._v("创建虚拟环境")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("mkvirtualenv py2scrapy\n")])])]),s("ul",[s("li",[s("p",[a._v("进入虚拟环境")])]),a._v(" "),s("li",[s("p",[a._v("python查看当前虚拟环境的python版本")])]),a._v(" "),s("li",[s("p",[a._v("退出虚拟环境")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("deactivate\n")])])])])])]),a._v(" "),s("li",[s("p",[a._v("创建指定"),s("code",[a._v("python")]),a._v("版本的虚拟环境")]),a._v(" "),s("ul",[s("li",[a._v("= 后面是你"),s("code",[a._v("python")]),a._v("的安装目录有"),s("code",[a._v("python.exe")]),a._v("的目录 并且要加上 "),s("code",[a._v("\\python.exe")])])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("mkvirtualenv "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--python")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("C:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Users"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("python.exe py3scrapy\n")])])])]),a._v(" "),s("li",[s("p",[a._v("在任意目录使用虚拟环境")]),a._v(" "),s("ul",[s("li",[a._v("先使用workon查看所有的虚拟环境")]),a._v(" "),s("li",[a._v("在workon 名称 切入该虚拟环境")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("workon\nworkon py3scrapy\n")])])])])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("# virtualenvwrapper 默认的python版本，这里默认选择 python3\nexport VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3 \n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);